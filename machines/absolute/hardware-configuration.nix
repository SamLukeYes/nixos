# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" =
  #   { device = "/dev/disk/by-uuid/c9fd085d-f9d3-46e1-b508-9661f6ad01c7";
  #     fsType = "ext4";
  #   };

  # fileSystems."/efi" =
  #   { device = "systemd-1";
  #     fsType = "autofs";
  #   };

  # fileSystems."/var/lib/archbuild" =
  #   { device = "/var/archbuild.img";
  #     fsType = "btrfs";
  #     options = [ "loop" ];
  #   };

  # fileSystems."/var/lib/aurbuild" =
  #   { device = "/dev/zram1";
  #     fsType = "ext2";
  #   };

  # fileSystems."/home" =
  #   { device = "/dev/disk/by-uuid/3fbd8be9-1709-446d-9606-54a8d00d0fb4";
  #     fsType = "ext4";
  #   };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
