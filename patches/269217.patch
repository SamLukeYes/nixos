From 2ccae77687d587c98eb0d2c5c873f83e0aa6400c Mon Sep 17 00:00:00 2001
From: Peder Bergebakken Sundt <pbsds@hotmail.com>
Date: Wed, 22 Nov 2023 16:19:29 +0100
Subject: [PATCH] gnomeExtensions.freon: fix patch

---
 ...n_at_UshakovVasilii_Github.yahoo.com.patch | 40 +++++++++----------
 1 file changed, 20 insertions(+), 20 deletions(-)

diff --git a/pkgs/desktops/gnome/extensions/extensionOverridesPatches/freon_at_UshakovVasilii_Github.yahoo.com.patch b/pkgs/desktops/gnome/extensions/extensionOverridesPatches/freon_at_UshakovVasilii_Github.yahoo.com.patch
index f9c326e5839654..98f58d0c458fe9 100644
--- a/pkgs/desktops/gnome/extensions/extensionOverridesPatches/freon_at_UshakovVasilii_Github.yahoo.com.patch
+++ b/pkgs/desktops/gnome/extensions/extensionOverridesPatches/freon_at_UshakovVasilii_Github.yahoo.com.patch
@@ -1,8 +1,8 @@
 diff --git a/hddtempUtil.js b/hddtempUtil.js
-index e5d1d6d..23f6289 100644
+index e52fbc2..f5138bb 100644
 --- a/hddtempUtil.js
 +++ b/hddtempUtil.js
-@@ -7,7 +7,7 @@ var HddtempUtil = class extends CommandLineUtil.CommandLineUtil {
+@@ -10,7 +10,7 @@ export default class HddtempUtil extends CommandLineUtil {
  
      constructor() {
          super();
@@ -11,7 +11,7 @@ index e5d1d6d..23f6289 100644
          if(hddtempArgv) {
              // check if this user can run hddtemp directly.
              if(!GLib.spawn_command_line_sync(hddtempArgv)[3]){
-@@ -19,8 +19,8 @@ var HddtempUtil = class extends CommandLineUtil.CommandLineUtil {
+@@ -22,8 +22,8 @@ export default class HddtempUtil extends CommandLineUtil {
          // doesn't seem to be the caseâ€¦ is it running as a daemon?
          // Check first for systemd
          let systemctl = GLib.find_program_in_path('systemctl');
@@ -22,21 +22,21 @@ index e5d1d6d..23f6289 100644
          let pid = undefined;
  
          if(systemctl) {
-@@ -35,7 +35,7 @@ var HddtempUtil = class extends CommandLineUtil.CommandLineUtil {
+@@ -38,7 +38,7 @@ export default class HddtempUtil extends CommandLineUtil {
  
          // systemd isn't used on this system, try sysvinit instead
          if(!pid && pidof) {
--            let output = GLib.spawn_command_line_sync("pidof hddtemp")[1].toString().trim();
-+            let output = GLib.spawn_command_line_sync("@procps@/bin/pidof hddtemp")[1].toString().trim();
+-            let output = run_command("pidof hddtemp");
++            let output = run_command("@procps@/bin/pidof hddtemp");
              if(output.length)
                  pid = Number(output.trim());
          }
 diff --git a/liquidctlUtil.js b/liquidctlUtil.js
-index 766bf62..2a6faf8 100644
+index a2f3015..215707a 100644
 --- a/liquidctlUtil.js
 +++ b/liquidctlUtil.js
-@@ -8,7 +8,7 @@ const commandLineUtil = Me.imports.commandLineUtil;
- var LiquidctlUtil = class extends commandLineUtil.CommandLineUtil {
+@@ -7,7 +7,7 @@ export default class LiquidctlUtil extends CommandLineUtil {
+ 
      constructor() {
          super();
 -        const path = GLib.find_program_in_path('liquidctl');
@@ -45,23 +45,23 @@ index 766bf62..2a6faf8 100644
      }
  
 diff --git a/nvmecliUtil.js b/nvmecliUtil.js
-index 98a61df..8a40624 100644
+index 2b12d2d..70609f7 100644
 --- a/nvmecliUtil.js
 +++ b/nvmecliUtil.js
-@@ -3,7 +3,7 @@ const GLib = imports.gi.GLib;
- const Me = imports.misc.extensionUtils.getCurrentExtension();
+@@ -1,7 +1,7 @@
+ import GLib from 'gi://GLib';
  
  function getNvmeData (argv){
 -    const nvme = GLib.find_program_in_path('nvme')
 +    const nvme = '@nvmecli@/bin/nvme'
-     return JSON.parse(GLib.spawn_command_line_sync(`${nvme} ${argv} -o json`)[1].toString())
+     return JSON.parse(new TextDecoder().decode(GLib.spawn_command_line_sync(`${nvme} ${argv} -o json`)[1]))
  }
  
 diff --git a/sensorsUtil.js b/sensorsUtil.js
-index bd6de61..5951b17 100644
+index 90c6ca9..5788635 100644
 --- a/sensorsUtil.js
 +++ b/sensorsUtil.js
-@@ -7,7 +7,7 @@ var SensorsUtil = class extends CommandLineUtil.CommandLineUtil {
+@@ -6,7 +6,7 @@ export default class SensorsUtil extends CommandLineUtil {
  
      constructor() {
          super();
@@ -71,15 +71,15 @@ index bd6de61..5951b17 100644
          this._argv = path ? [path, '-A', '-j'] : null;
      }
 diff --git a/smartctlUtil.js b/smartctlUtil.js
-index 4888323..66b6c61 100644
+index f58d194..b9cb9ca 100644
 --- a/smartctlUtil.js
 +++ b/smartctlUtil.js
-@@ -3,7 +3,7 @@ const GLib = imports.gi.GLib;
- const Me = imports.misc.extensionUtils.getCurrentExtension();
- const ByteArray = imports.byteArray;
+@@ -1,7 +1,7 @@
+ import GLib from 'gi://GLib';
+ 
  function getSmartData (argv){
 -    const smartctl = GLib.find_program_in_path('smartctl')
 +    const smartctl = '@smartmontools@/bin/smartctl'
-     return JSON.parse(ByteArray.toString( GLib.spawn_command_line_sync(`'${smartctl}' ${argv} -j`)[1] ))
+     return JSON.parse(new TextDecoder().decode( GLib.spawn_command_line_sync(`'${smartctl}' ${argv} -j`)[1] ))
  }
  
