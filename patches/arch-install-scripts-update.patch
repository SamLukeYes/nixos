From 4b0c7a122979c942db1aeb95a9d1c12d4a8f2e80 Mon Sep 17 00:00:00 2001
From: SamLukeYes <samlukeyes123@gmail.com>
Date: Thu, 2 Oct 2025 03:03:08 +0800
Subject: [PATCH] arch-install-scripts: 29 -> 31

---
 .../ar/arch-install-scripts/package.nix       | 26 ++++++++++++-------
 1 file changed, 17 insertions(+), 9 deletions(-)

diff --git a/pkgs/by-name/ar/arch-install-scripts/package.nix b/pkgs/by-name/ar/arch-install-scripts/package.nix
index 2a6ac6a6b146a6..8226245bd7579a 100644
--- a/pkgs/by-name/ar/arch-install-scripts/package.nix
+++ b/pkgs/by-name/ar/arch-install-scripts/package.nix
@@ -23,14 +23,14 @@
 
 resholve.mkDerivation rec {
   pname = "arch-install-scripts";
-  version = "29";
+  version = "31";
 
   src = fetchFromGitLab {
     domain = "gitlab.archlinux.org";
     owner = "archlinux";
     repo = "arch-install-scripts";
     tag = "v${version}";
-    hash = "sha256-XWcZZ+ET3J4dB6M9CdXESf0iQh+2vYxlxoJ6TZ3vFUk=";
+    hash = "sha256-Oh1nC/gPJDDy8cXiZPbEfpwOuO+RFRcxVCZuTtB2MV8=";
   };
 
   nativeBuildInputs = [
@@ -40,11 +40,11 @@ resholve.mkDerivation rec {
 
   postPatch = ''
     substituteInPlace ./Makefile \
-      --replace "PREFIX = /usr/local" "PREFIX ?= /usr/local"
+      --replace-fail "PREFIX = /usr/local" "PREFIX ?= /usr/local"
     substituteInPlace ./pacstrap.in \
-      --replace "cp -a" "cp -LR --no-preserve=mode" \
-      --replace "unshare pacman" "unshare ${pacman}/bin/pacman" \
-      --replace 'gnupg "$newroot/etc/pacman.d/"' 'gnupg "$newroot/etc/pacman.d/" && chmod 700 "$newroot/etc/pacman.d/gnupg"'
+      --replace-fail "cp -a" "cp -LR --no-preserve=mode" \
+      --replace-fail "unshare pacman" "unshare ${pacman}/bin/pacman" \
+      --replace-fail '"$gpg_dir" "$newroot/$gpg_dir"' '"$gpg_dir" "$newroot/$gpg_dir" && chmod 700 "$newroot/etc/pacman.d/gnupg"'
     echo "export PATH=${lib.strings.makeSearchPath "" chrootPath}:\$PATH" >> ./common
   '';
 
@@ -80,10 +80,17 @@ resholve.mkDerivation rec {
         util-linux
       ];
 
-      execer = [ "cannot:${pacman}/bin/pacman-key" ];
+      execer = [
+        "cannot:${pacman}/bin/pacman-conf"
+        "cannot:${pacman}/bin/pacman-key"
+      ];
+
+      fake.external = [
+        "systemd-escape"
+        "systemd-run"
+      ];
 
-      # TODO: no good way to resolve mount/umount in Nix builds for now
-      # see https://github.com/abathur/resholve/issues/29
+      # Avoid using setuid wrappers
       fix = {
         mount = true;
         umount = true;
@@ -93,6 +100,7 @@ resholve.mkDerivation rec {
         "$setup"
         "$pid_unshare"
         "$mount_unshare"
+        "$sd_args"
         "${pacman}/bin/pacman"
       ];
     };
